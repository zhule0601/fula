<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fula.mapper.UserDao">
  <resultMap id="BaseResultMap" type="com.fula.model.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="wx_uid" jdbcType="VARCHAR" property="wxUid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="state" jdbcType="VARCHAR" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, wx_uid, `password`, `state`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="userList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.fula.model.User" useGeneratedKeys="true">
    insert into user (gmt_create, gmt_modified, wx_uid, 
      `password`, `state`)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{wxUid,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR})
  </insert>

  <insert id="insertForDuplicateKey" keyColumn="id" keyProperty="id" parameterType="com.fula.model.User" useGeneratedKeys="true">
    insert into user (
        gmt_create, gmt_modified, wx_uid, `password`, `state`)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{wxUid,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR})
    on duplicate key update
        gmt_modified = now(),
        password = values(password),
        state = values(state)

  </insert>

  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.fula.model.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="wxUid != null">
        wx_uid,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="state != null">
        `state`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="wxUid != null">
        #{wxUid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fula.model.User">
    update user
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="wxUid != null">
        wx_uid = #{wxUid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fula.model.User">
    update user
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      wx_uid = #{wxUid,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>